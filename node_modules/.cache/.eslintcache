[{"/Users/dayoungkim/Desktop/github/git_log/src/index.js":"1","/Users/dayoungkim/Desktop/github/git_log/src/reportWebVitals.js":"2","/Users/dayoungkim/Desktop/github/git_log/src/redux/configureStore.js":"3","/Users/dayoungkim/Desktop/github/git_log/src/shared/App.js":"4","/Users/dayoungkim/Desktop/github/git_log/src/shared/theme.js":"5","/Users/dayoungkim/Desktop/github/git_log/src/components/Header.js":"6","/Users/dayoungkim/Desktop/github/git_log/src/pages/PostList.js":"7","/Users/dayoungkim/Desktop/github/git_log/src/components/PostList/Post.js":"8","/Users/dayoungkim/Desktop/github/git_log/src/elements/index.js":"9","/Users/dayoungkim/Desktop/github/git_log/src/elements/Grid.js":"10","/Users/dayoungkim/Desktop/github/git_log/src/elements/Image.js":"11","/Users/dayoungkim/Desktop/github/git_log/src/elements/Input.js":"12","/Users/dayoungkim/Desktop/github/git_log/src/elements/Text.js":"13","/Users/dayoungkim/Desktop/github/git_log/src/components/PostList/Count.js":"14","/Users/dayoungkim/Desktop/github/git_log/src/pages/Login.js":"15","/Users/dayoungkim/Desktop/github/git_log/src/pages/Signup.js":"16","/Users/dayoungkim/Desktop/github/git_log/src/elements/Button.js":"17","/Users/dayoungkim/Desktop/github/git_log/src/components/PostList/CommentList.js":"18","/Users/dayoungkim/Desktop/github/git_log/src/redux/modules/post.js":"19"},{"size":733,"mtime":1618032079047,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1617946309585,"results":"22","hashOfConfig":"21"},{"size":1064,"mtime":1618032076990,"results":"23","hashOfConfig":"21"},{"size":1140,"mtime":1618247451952,"results":"24","hashOfConfig":"21"},{"size":1236,"mtime":1618215535610,"results":"25","hashOfConfig":"21"},{"size":1046,"mtime":1618239836988,"results":"26","hashOfConfig":"21"},{"size":326,"mtime":1618376947614,"results":"27","hashOfConfig":"21"},{"size":3778,"mtime":1618389957199,"results":"28","hashOfConfig":"21"},{"size":188,"mtime":1618237352607,"results":"29","hashOfConfig":"21"},{"size":1249,"mtime":1618237352604,"results":"30","hashOfConfig":"21"},{"size":5210,"mtime":1618237352605,"results":"31","hashOfConfig":"21"},{"size":1931,"mtime":1618237352606,"results":"32","hashOfConfig":"21"},{"size":691,"mtime":1618237352606,"results":"33","hashOfConfig":"21"},{"size":1043,"mtime":1618358874562,"results":"34","hashOfConfig":"21"},{"size":1889,"mtime":1618237352610,"results":"35","hashOfConfig":"21"},{"size":3634,"mtime":1618237451960,"results":"36","hashOfConfig":"21"},{"size":1190,"mtime":1618237352603,"results":"37","hashOfConfig":"21"},{"size":908,"mtime":1618311974695,"results":"38","hashOfConfig":"21"},{"size":2868,"mtime":1618391029868,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1v1brg7",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},"/Users/dayoungkim/Desktop/github/git_log/src/index.js",[],["87","88"],"/Users/dayoungkim/Desktop/github/git_log/src/reportWebVitals.js",[],"/Users/dayoungkim/Desktop/github/git_log/src/redux/configureStore.js",[],"/Users/dayoungkim/Desktop/github/git_log/src/shared/App.js",[],"/Users/dayoungkim/Desktop/github/git_log/src/shared/theme.js",["89"],"const size = {\n    mobile: '767px',\n    tablet: '1024px',\n    desktop: '1025px'\n  };\n\n  const theme = {\n    responsiveContainer: `\n    @media (max-width: 1919px) {\n      width: 1376px;\n    }\n    @media (max-width: 1440px) {\n      width: 1280px;\n    }\n    @media (max-width: 1312px) {\n      width: 912px;\n    }\n    @media (max-width: 944px) {\n      width: calc(100% - 2rem);\n    }\n    @media (max-width: 767px) {\n      width: calc(100% - 2rem);\n    }\n    width: 1728px;\n    margin-left: auto;\n    margin-right: auto;\n    `,\n\n    main_color: 'rgb(255, 82, 82)',\n    main_white: '#ffffff',\n    main_navy: '#24292e ',\n    main_bg_color: '#f7f8f9',\n    gray: '#adb5bd',\n    post_bg: '#f1f3f5',\n    black: '#343a40',\n    mobile: `(max-width: ${size.mobile})`,\n    tablet: `(max-width: ${size.tablet})`,\n    desktop: `(min-width: ${size.desktop})`,\n    flex_column:\n      'display: flex; flex-direction:column; align-items: center; justify-content: space-between; ',\n    flex_row:\n      'display: flex; align-items: center; justify-content: space-between;',\n    default_width:\n      'width:100vw; max-width:768px; box-sizing:border-box; padding:0 1rem',\n    max_width: `max-width:768px`,\n    border_box: `box-sizing:border-box`,\n\n\n    \n  };\n  ","/Users/dayoungkim/Desktop/github/git_log/src/components/Header.js",["90","91"],"import React from 'react';\nimport { Grid, Text, Image, Button } from '../elements';\nimport {AiFillGithub} from 'react-icons/ai';\n\nimport styled from 'styled-components';\n\nconst Header = () => {\n    return (\n        <Grid is_flex>\n            <Logo>\n                <AiFillGithub/> Git_log\n            </Logo>\n            {/*변경 예정입니다 */}\n            <HeaderBtns>\n                <Button width=\"50%\" margin=\"10px 10px 10px 0\" alt=\"회원가입\" \n                radius=\"8px\" size=\"0.9vw\"  color=\"white\">회원가입</Button>\n                <Button width=\"50%\" margin=\"10px 0 10px 10px\" alt=\"로그인\" \n                radius=\"8px\" size=\"0.9vw\" bg=\"#ffffff\" color=\"#24292e\">로그인</Button>\n            </HeaderBtns>\n        </Grid>\n        \n        \n    );\n};\n\nconst Logo = styled.div`\n    margin: 20px;\n    width: 50%;\n    font-weight: 600;\n    font-size: 1.8vw;\n\n`;\n\nconst HeaderBtns = styled.div`\n    width: 30%;\n    display: flex;\n    justify-content: space-evenly;\n    width:10%;\n    margin: 10px;\n\n`;\n\nexport default Header;","/Users/dayoungkim/Desktop/github/git_log/src/pages/PostList.js",["92","93","94"],"import React from \"react\";\nimport styled from \"styled-components\"; \n\nimport {useSelector, useDispatch} from \"react-redux\";\n\nimport Post from \"../components/PostList/Post\"\n\n\nconst PostList = (props) => {\n\n\n    return (\n        <React.Fragment>\n            <Post/>\n        </React.Fragment>\n        )\n}\n\nexport default PostList;","/Users/dayoungkim/Desktop/github/git_log/src/components/PostList/Post.js",["95","96","97","98","99"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text } from \"../../elements\";\n\nimport CommentList from \"./CommentList\";\nimport Count from \"./Count\";\n\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { actionCreators as postActions } from '../../redux/modules/post';\n\n\nconst Post = (props) => {\n  const dispatch  = useDispatch();\n\n  useEffect(() => {\n    dispatch(postActions.fetchPost());\n  }, [])\n\n  return (\n    <React.Fragment>\n        <PostContainer>\n          <PostBody1 src={props.image_url}>\n            <img width=\"100%\" height=\"auto\" src={props.image_url} />\n          </PostBody1>\n\n          <PostBody2>\n\n            <Body1Writer>\n              <Grid flex margin=\"0px\">\n                <ProfileImg src={props.user_info.profile} />\n                <Text bold margin=\"0px\">\n                  {props.user_info.nickname}\n                </Text>\n              </Grid>\n            </Body1Writer>\n\n            <Body2Contents>\n              <Text margin=\"0px\">{props.contents}</Text>\n              <Text size=\"8pt\" color=\"grey\" margin=\"1px\">\n                {props.insert_dt}\n              </Text>\n            </Body2Contents>\n\n            <Body3CommentList>\n              <CommentList />\n            </Body3CommentList>\n\n            <Body4Count>\n              <Count />\n            </Body4Count>\n\n            <Body5CommentWrite>\n              <CommentInput placeholder=\"댓글 달기\" />\n              <CommentBtn>게시</CommentBtn>\n            </Body5CommentWrite>\n\n          </PostBody2>\n        </PostContainer>\n    </React.Fragment>\n  );\n};\n\nPost.defaultProps = \n  {\n    post_id: 0,\n    user_info: {\n      nickname: \"_nickname\",\n      profile:\n        \"https://blog.kakaocdn.net/dn/cyOIpg/btqx7JTDRTq/1fs7MnKMK7nSbrM9QTIbE1/img.jpg\",\n    },\n    image_url:\n      \"http://image.dongascience.com/Photo/2018/12/2d5efe44bdd02f3e2ec4e99189d89d18.jpg\",\n    contents: \"개발자 커뮤니티, 깃로그\",\n    comment_cnt: 8,\n    like_cnt: 20,\n    insert_dt: \"2021-04-12 00:00:00\",\n  };\n\n\n\nconst PostContainer = styled.div`\n  width: 100%;\n  margin: auto;\n  border: 2px solid #eee;\n  box-sizing: border-box;\n  display: flex;\n  position: relative;\n  top: 50px;\n`;\n\nconst PostBody1 = styled.div`\n  width: 60%;\n  height: auto;\n  aspect-ratio: 1/1;\n  object-fit: cover;\n  object-position: 50% 50%;\n  background-image: url(\"${(props) => props.src}\");\n  background-size: cover;\n  margin: auto;\n`;\n\nconst PostBody2 = styled.div`\n  width: 40%;\n`;\n\nconst Body1Writer = styled.div`\n  box-sizing: border-box;\n  width: 100%;\n  height: 10%;\n  padding-left: 10px;\n`;\n\nconst Body2Contents = styled.div`\n  box-sizing: border-box;\n  width: 100%;\n  height: 25%;\n  border-bottom: 2px solid #eee;\n  overflow: hidden;\n  padding-left: 10px;\n`;\n\nconst Body3CommentList = styled.div`\n  box-sizing: border-box;\n  width: 100%;\n  height: 51%;\n  overflow: hidden;\n  padding-left: 10px;\n`;\n\nconst Body4Count = styled.div`\n  box-sizing: border-box;\n  width: 100%;\n  height: 7%;\n  border-top: 2px solid #eee;\n  align-items: center;\n  display: flex;\n  padding: 13px 10px 9px 10px;\n`;\n\nconst Body5CommentWrite = styled.div`\n  box-sizing: border-box;\n  width: 100%;\n  height: 7%;\n  display: flex;\n  justify-content: space-between;\n  padding: 9px 10px 12px 10px;\n`;\n\nconst ProfileImg = styled.img`\n  width: 9%;\n  aspect-ratio: 1/1;\n  border-radius: 100px;\n  background-image: url(\"${(props) => props.src}\");\n  margin-right: 0px;\n`;\n\nconst Icon = styled.img`\n  margin: 0px 5px 0px 5px;\n  width: 4%;\n`;\n\nconst CommentInput = styled.input`\n  outline: none;\n  border: none;\n  width: 85%;\n`;\n\nconst CommentBtn = styled.button`\n  background-color: white;\n  outline: none;\n  border: none;\n  color: grey;\n`;\n\nexport default Post;\n","/Users/dayoungkim/Desktop/github/git_log/src/elements/index.js",[],"/Users/dayoungkim/Desktop/github/git_log/src/elements/Grid.js",[],"/Users/dayoungkim/Desktop/github/git_log/src/elements/Image.js",[],"/Users/dayoungkim/Desktop/github/git_log/src/elements/Input.js",[],"/Users/dayoungkim/Desktop/github/git_log/src/elements/Text.js",[],"/Users/dayoungkim/Desktop/github/git_log/src/components/PostList/Count.js",[],"/Users/dayoungkim/Desktop/github/git_log/src/pages/Login.js",[],"/Users/dayoungkim/Desktop/github/git_log/src/pages/Signup.js",["100","101"],"import React from 'react';\nimport styled from 'styled-components';\nimport {AiFillGithub} from 'react-icons/ai';\n\nimport {Grid, Text, Image, Input, Button } from '../elements';\n\nconst Signup = (props) => {\n\n    return (\n        <React.Fragment>\n            <SignupWrap>\n            <SignupHeader>\n                <Grid is_flex>\n                    <Text size=\"2.1vw\" bold>Create Account</Text>\n                </Grid>\n                <Grid is_flex>\n                    <Text size=\"0.8vw\" bold=\"400\">🎈Use your email for registration</Text>\n                </Grid>\n                {/* <Grid is_flex>\n                    <Button>\n                        <AiFillGithub/>Sign up with Github\n                    </Button>\n                    \n                </Grid> */}\n            </SignupHeader>\n            \n            <SignupBody>\n            <InputWrap>\n                <Grid is_flex width=\"100%\" margin=\"5px 0\">\n                <Input \n                        type=\"text\" \n                        width=\"85%\" \n                        margin=\"5px 0px 5px 35px\" \n                        placeholder=\"Email\"/>\n                    <Button  width=\"20%\" margin=\"0px 30px 0px 0px\" padding=\"10px\"\n                        size=\"0.5vw\" color=\"white\">중복확인</Button>\n                </Grid>\n                <Grid is_flex width=\"100%\" margin=\"5px 0\">\n                <Input \n                        type=\"text\" \n                        width=\"85%\" \n                        margin=\"5px 0px 5px 35px\" \n                        placeholder=\"Nickname\"/>\n                    <Button  width=\"20%\" margin=\"0px 30px 0px 0px\" padding=\"10px\" \n                    size=\"0.5vw\" color=\"white\">중복확인</Button>\n                </Grid>\n                <Grid is_flex margin=\"5px auto\">\n                <Input \n                        type=\"text\" \n                        width=\"85%\" \n                        margin=\"5px 0px 5px 35px\" \n                        placeholder=\"PassWord\"/>\n                </Grid>\n                <Grid is_flex margin=\"5px 0\">\n                <Input \n                        type=\"text\" \n                        width=\"85%\" \n                        margin=\"5px 0px 5px 35px\" \n                        placeholder=\"PassWord check\"/>\n                </Grid>\n                <Grid is_flexmargin=\"5px 0\">\n                <Input \n                        type=\"text\" \n                        width=\"85%\" \n                        margin=\"5px 0px 5px 35px\" \n                        padding=\"0 0 0 4px\"\n                        placeholder=\"Github address\"/>\n                </Grid> \n                </InputWrap>\n            </SignupBody>\n            <SignupBtns>\n                <Button width=\"40%\" margin=\"10px 0\" alt=\"회원가입\" \n                radius=\"8px\" size=\"1.2vw\"  color=\"white\">Sign Up</Button>\n                <Button width=\"40%\" margin=\"10px 0\" alt=\"로그인\" \n                radius=\"8px\" size=\"1.2vw\" bg=\"#ffffff\" color=\"#24292e\">Sign In</Button>\n            </SignupBtns>\n        </SignupWrap>\n        \n        </React.Fragment>\n        \n        \n    );\n};\n\nconst SignupWrap = styled.div`\n    width: 25%;\n    margin:-8px auto 15px auto;\n    /* margin: 8% auto; */\n    padding: 8px;\n    border: 1px solid #24292e ;\n    border-radius: 8px;\n    /* background-color:#f6f8fa; */\n    \n    @media (max-width: 767px){\n        \n    }\n\n`;\n\nconst SignupHeader = styled.div`\n\n\n`;\n\nconst SignupBody = styled.div`\n\n`;\n\nconst SignupBtns = styled.div`\n    display: flex;\n    justify-content: space-evenly;\n    width:100%;\n    margin: 10px 0px;\n\n`;\n\nconst InputWrap = styled.div`\n    padding: 8px;\n\n`;\n\n\n\n\nexport default Signup;","/Users/dayoungkim/Desktop/github/git_log/src/elements/Button.js",["102"],"import React from 'react';\nimport styled from 'styled-components';\n\nconst Button = (props) => {\n    const { _onClick, is_float, radius, color, children, margin, width, bg, padding, size, border} =props;\n\n    const styles = {\n        margin:margin,\n        width:width,\n        padding:padding,\n        size: size,\n        radius: radius,\n        bg:bg,\n        border:border,\n        color:color,\n    }\n\n    return (\n        <ElButton onClick={_onClick} {...styles}>\n            {children}\n        </ElButton>\n    );\n};\n\n\nButton.defaultProps = {\n    children:null,\n    _onClick: () => {},\n    margin: false,\n    width: \"100%\",\n    size: \"10px\",\n    padding: \"12px 0px\",\n    radius: \"4px\",\n    bg:\"#24292e\",\n    border:false,\n    color:false,\n}\n\nconst ElButton = styled.button`\n    width: ${(props) => props.width};\n    background-color: ${(props) => props.bg};\n    color: ${(props) => props.color};\n    padding: ${(props) => props.padding};\n    box-sizing: border-box;\n    font-size: ${(props) => props.size};\n    border: ${(props) => props.border};\n    border-radius: ${(props) => props.radius};\n    ${(props) => (props.margin ? `margin: ${props.margin};` : \"\")}\n`;\n\nexport default Button;","/Users/dayoungkim/Desktop/github/git_log/src/components/PostList/CommentList.js",["103","104"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Image, Text, Input } from \"../../elements\";\n\nconst CommentList = (props) => {\n  return (\n    <React.Fragment>\n      <div flex-direction=\"column\">\n        <Grid flex>\n          <ProfileImg src={props.user_info.profile} />\n          <Text bold>{props.user_info.nickname}</Text>\n        </Grid>\n        <Grid>\n        <Text margin=\"0px\">{props.comment}</Text>\n        </Grid>\n      </div>\n    </React.Fragment>\n  );\n};\n\nCommentList.defaultProps = {\n  user_info: {\n    nickname: \"_nickname\",\n    profile:\n      \"https://blog.kakaocdn.net/dn/cyOIpg/btqx7JTDRTq/1fs7MnKMK7nSbrM9QTIbE1/img.jpg\",\n  },\n  comment: \" 댓글입니다 :)\",\n};\n\nconst ProfileImg = styled.img`\n  width: 9%;\n  aspect-ratio: 1/1;\n  border-radius:100px;\n  background-image: url(\"${(props) => props.src}\");\n  margin-right: 5px;\n`;\n\n\nexport default CommentList;\n","/Users/dayoungkim/Desktop/github/git_log/src/redux/modules/post.js",["105"],"import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\n// axios.default.baseURL = \"http://13.125.167.83\";\n\nconst initialState = {\n  list: [],\n  detailPost: [],\n  // paging:{ start: null, next: null, size: 10 },\n  // is_loading: false\n};\n\n// actions\nconst SET_POST = \"SET_POST\";\nconst ADD_POST = \"ADD_POST\";\n\n// actionCreators: createAction\nconst setPost = createAction(SET_POST, (post) => ({ post }));\nconst addPost = createAction(ADD_POST, (post) => ({ post }));\n\n// 메인 페이지: 게시글 전체목록 조회\nconst fetchPost = (postId) => {\n  return function (dispatch, getState, { history }) {\n    const API = \"http://13.125.167.83/api/posts?page=0&size=10\";\n    axios.get(API, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      // data: JSON.stringify({}),\n    })\n    .then((response) => response.json())\n    .then((res) => {\n      console.log(res);\n      // dispatch(setPost(res.data));\n    }).catch((err) => {\n      console.error(err);\n    });\n  };\n};\n\n// const fetchPost = () => {\n//   return function (dispatch, getState, { history }) {\n//     const API = \"http://13.125.167.83/api/posts?page=0&size=10\";\n//     fetch(API, {\n//       method: 'GET',\n//       headers: {\n//         'content-type': 'application/json'\n//       },\n//       body: JSON.stringify({})\n//     })\n//       .then((response) => response.json())\n//       .then((result) => {\n//       console.log(result);\n//       });\n//   };\n// };\n\n// 스토리 페이지\nconst fetchPostByUser = (userId) => {\n  return function (dispatch, getState, { history }) {\n    axios.get(`/api/post/${userId}`).then((res) => {\n      dispatch(setPost(res.data));\n    });\n  };\n};\n\nconst createPost = (post) => {\n  return function (dispatch, getState, { history }) {\n    console.log(\"createPost\", post);\n    axios.post(`/api/post`, post).then((res) => {\n      history.push(\"/\");\n    });\n  };\n};\n\nconst deletePost = (postId) => {\n  return function (dispatch, getState, { history }) {\n    axios.delete(`/api/post/${postId}`).then((res) => {\n      history.push(\"/\");\n    });\n  };\n};\n\nconst updatePost = (postId, post) => {\n  return function (dispatch, getState, { history }) {\n    axios.put(`/api/post/${postId}`, post).then((res) => {\n      history.push(\"/\");\n    });\n  };\n};\n\n// reducer: handleActions\nexport default handleActions(\n  {\n    [ADD_POST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.list.unshift(action.payload.post);\n      }),\n    [SET_POST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.detailPost = action.payload.post;\n      }),\n  },\n  initialState\n);\n\n// actionCreator export\nconst actionCreators = {\n  addPost,\n  fetchPostByUser,\n  fetchPost,\n  createPost,\n  deletePost,\n  updatePost,\n  setPost,\n};\n\nexport { actionCreators };\n",{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":7,"column":9,"nodeType":"112","messageId":"113","endLine":7,"endColumn":14},{"ruleId":"110","severity":1,"message":"114","line":2,"column":16,"nodeType":"112","messageId":"113","endLine":2,"endColumn":20},{"ruleId":"110","severity":1,"message":"115","line":2,"column":22,"nodeType":"112","messageId":"113","endLine":2,"endColumn":27},{"ruleId":"110","severity":1,"message":"116","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":14},{"ruleId":"110","severity":1,"message":"117","line":4,"column":9,"nodeType":"112","messageId":"113","endLine":4,"endColumn":20},{"ruleId":"110","severity":1,"message":"118","line":4,"column":22,"nodeType":"112","messageId":"113","endLine":4,"endColumn":33},{"ruleId":"110","severity":1,"message":"119","line":8,"column":10,"nodeType":"112","messageId":"113","endLine":8,"endColumn":18},{"ruleId":"110","severity":1,"message":"117","line":9,"column":23,"nodeType":"112","messageId":"113","endLine":9,"endColumn":34},{"ruleId":"120","severity":1,"message":"121","line":18,"column":6,"nodeType":"122","endLine":18,"endColumn":8,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":24,"column":13,"nodeType":"126","endLine":24,"endColumn":69},{"ruleId":"110","severity":1,"message":"127","line":158,"column":7,"nodeType":"112","messageId":"113","endLine":158,"endColumn":11},{"ruleId":"110","severity":1,"message":"128","line":3,"column":9,"nodeType":"112","messageId":"113","endLine":3,"endColumn":21},{"ruleId":"110","severity":1,"message":"115","line":5,"column":21,"nodeType":"112","messageId":"113","endLine":5,"endColumn":26},{"ruleId":"110","severity":1,"message":"129","line":5,"column":23,"nodeType":"112","messageId":"113","endLine":5,"endColumn":31},{"ruleId":"110","severity":1,"message":"115","line":3,"column":16,"nodeType":"112","messageId":"113","endLine":3,"endColumn":21},{"ruleId":"110","severity":1,"message":"130","line":3,"column":29,"nodeType":"112","messageId":"113","endLine":3,"endColumn":34},{"ruleId":"110","severity":1,"message":"131","line":4,"column":8,"nodeType":"112","messageId":"113","endLine":4,"endColumn":14},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'theme' is assigned a value but never used.","Identifier","unusedVar","'Text' is defined but never used.","'Image' is defined but never used.","'styled' is defined but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["134"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Icon' is assigned a value but never used.","'AiFillGithub' is defined but never used.","'is_float' is assigned a value but never used.","'Input' is defined but never used.","'moment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},"Update the dependencies array to be: [dispatch]",{"range":"137","text":"138"},[487,489],"[dispatch]"]