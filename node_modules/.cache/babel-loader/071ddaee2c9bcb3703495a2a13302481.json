{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createBrowserHistory } from 'history';\nimport { connectRouter } from 'connected-react-router';\nexport const history = createBrowserHistory();\nconst rootReducer = combineReducers({\n  router: connectRouter(history)\n});\nconst middlewares = [thunk.withExtraArgument({\n  history: history\n})]; // history-thunk 연결\n\nconst env = process.env.NODE_ENV;\n\nif (env === 'development') {\n  /* const { logger } = require('redux-logger'); // if문 안에서만 쓰려고\n  middlewares.push(logger); */\n}\n\nconst composeEnhancers = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({// Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n}) : compose;\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\n\nlet store = initialStore => createStore(rootReducer, enhancer);\n\nexport default store();","map":{"version":3,"sources":["/Users/dayoungkim/Desktop/github/git_log/src/redux/configureStore.js"],"names":["createStore","combineReducers","applyMiddleware","compose","thunk","createBrowserHistory","connectRouter","history","rootReducer","router","middlewares","withExtraArgument","env","process","NODE_ENV","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","enhancer","store","initialStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AAEA,OAAO,MAAMC,OAAO,GAAGF,oBAAoB,EAApC;AAEP,MAAMG,WAAW,GAAGP,eAAe,CAAC;AAGhCQ,EAAAA,MAAM,EAAEH,aAAa,CAACC,OAAD;AAHW,CAAD,CAAnC;AAMA,MAAMG,WAAW,GAAG,CAACN,KAAK,CAACO,iBAAN,CAAwB;AAAEJ,EAAAA,OAAO,EAAEA;AAAX,CAAxB,CAAD,CAApB,C,CAAqE;;AAErE,MAAMK,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAxB;;AAEA,IAAIF,GAAG,KAAK,aAAZ,EAA2B;AACvB;AACJ;AACG;;AAGH,MAAMG,gBAAgB,GACpB,OAAOC,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,CAACC,oCAArC,GACID,MAAM,CAACC,oCAAP,CAA4C,CAC1C;AAD0C,CAA5C,CADJ,GAIId,OALN;AAOA,MAAMe,QAAQ,GAAGH,gBAAgB,CAACb,eAAe,CAAC,GAAGQ,WAAJ,CAAhB,CAAjC;;AAEA,IAAIS,KAAK,GAAIC,YAAD,IAAkBpB,WAAW,CAACQ,WAAD,EAAcU,QAAd,CAAzC;;AAEA,eAAeC,KAAK,EAApB","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createBrowserHistory } from 'history';\nimport { connectRouter } from 'connected-react-router';\n\nexport const history = createBrowserHistory();\n\nconst rootReducer = combineReducers({\n\n\n    router: connectRouter(history)\n});\n\nconst middlewares = [thunk.withExtraArgument({ history: history })]; // history-thunk 연결\n\nconst env = process.env.NODE_ENV;\n\nif (env === 'development') {\n    /* const { logger } = require('redux-logger'); // if문 안에서만 쓰려고\n    middlewares.push(logger); */\n  }\n\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n    : compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\n\nlet store = (initialStore) => createStore(rootReducer, enhancer);\n\nexport default store();\n"]},"metadata":{},"sourceType":"module"}